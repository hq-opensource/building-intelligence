"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2853],{2115:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Core API/device","title":"Device Module","description":"The device package provides a comprehensive suite of modules for managing and interacting with various devices within the system. It includes functionalities for device classification, historical data retrieval, and real-time device control.","source":"@site/docs/Core API/device.md","sourceDirName":"Core API","slug":"/Core API/device","permalink":"/building-intelligence/docs/Core API/device","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Database Module","permalink":"/building-intelligence/docs/Core API/database"},"next":{"title":"Schedule Module","permalink":"/building-intelligence/docs/Core API/schedule"}}');var d=s(4848),n=s(8453);const c={sidebar_position:3},l="Device Module",r={},a=[{value:"Device Helper",id:"device-helper",level:2},{value:"Device Types (Enum)",id:"device-types-enum",level:3},{value:"Static Methods",id:"static-methods",level:3},{value:"Historical Data Reader",id:"historical-data-reader",level:2},{value:"Methods",id:"methods",level:3},{value:"Realtime Data Manager",id:"realtime-data-manager",level:2},{value:"Methods",id:"methods-1",level:3}];function o(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.header,{children:(0,d.jsx)(i.h1,{id:"device-module",children:"Device Module"})}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.code,{children:"device"})," package provides a comprehensive suite of modules for managing and interacting with various devices within the system. It includes functionalities for device classification, historical data retrieval, and real-time device control."]}),"\n",(0,d.jsx)(i.h2,{id:"device-helper",children:"Device Helper"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.code,{children:"helper.py"})," module implements the ",(0,d.jsx)(i.code,{children:"DeviceHelper"})," class, which offers utility functions for device-related operations."]}),"\n",(0,d.jsx)(i.h3,{id:"device-types-enum",children:"Device Types (Enum)"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.code,{children:"DeviceHelper"})," enum defines the following device types:"]}),"\n",(0,d.jsxs)(i.ul,{children:["\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"ON_OFF_EV_CHARGER"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"ELECTRIC_VEHICLE_V1G"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"ELECTRIC_VEHICLE_V2G"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"ELECTRIC_STORAGE"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"PHOTOVOLTAIC_GENERATOR_PVLIB"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"SPACE_HEATING"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"THERMAL_STORAGE"})}),"\n",(0,d.jsx)(i.li,{children:(0,d.jsx)(i.code,{children:"WATER_HEATER"})}),"\n"]}),"\n",(0,d.jsx)(i.h3,{id:"static-methods",children:"Static Methods"}),"\n",(0,d.jsxs)(i.ul,{children:["\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"device_exists(devices, device_id)"}),": Checks if a device with the specified ID exists in a list of devices."]}),"\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"count_devices_by_type(device_list, device_type)"}),": Counts the number of devices of a specific type in a list."]}),"\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"get_all_values_by_filtering_devices(device_list, filter_key, filter_value, target_key)"}),": Retrieves a list of values for a ",(0,d.jsx)(i.code,{children:"target_key"})," from a list of devices, filtered by a ",(0,d.jsx)(i.code,{children:"filter_key"})," and ",(0,d.jsx)(i.code,{children:"filter_value"}),"."]}),"\n"]}),"\n",(0,d.jsx)(i.h2,{id:"historical-data-reader",children:"Historical Data Reader"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.code,{children:"historical.py"})," module contains the ",(0,d.jsx)(i.code,{children:"HistoricalDataReader"})," class, responsible for retrieving historical data for a wide range of devices from InfluxDB."]}),"\n",(0,d.jsx)(i.h3,{id:"methods",children:"Methods"}),"\n",(0,d.jsxs)(i.ul,{children:["\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"get_historical_data(start, stop, devices)"}),": Retrieves historical data for a list of devices. It uses helper methods to get data based on the device type."]}),"\n"]}),"\n",(0,d.jsx)(i.h2,{id:"realtime-data-manager",children:"Realtime Data Manager"}),"\n",(0,d.jsxs)(i.p,{children:["The ",(0,d.jsx)(i.code,{children:"realtime.py"})," module features the ",(0,d.jsx)(i.code,{children:"RealtimeDataManager"})," class, designed to manage real-time interactions with devices. This includes setting device states and retrieving current data through a Redis message broker."]}),"\n",(0,d.jsx)(i.h3,{id:"methods-1",children:"Methods"}),"\n",(0,d.jsxs)(i.ul,{children:["\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"has_device(device_id)"}),": Checks if a device exists."]}),"\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"set_device_state(broker, device_id, action_to_apply)"}),": Sets the state of a device by publishing a message to the Redis broker."]}),"\n",(0,d.jsxs)(i.li,{children:[(0,d.jsx)(i.code,{children:"get_device_state(broker, entity_id, field)"}),": Gets the state of a device by sending a request to the Redis broker."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>c,x:()=>l});var t=s(6540);const d={},n=t.createContext(d);function c(e){const i=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);