"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[772],{8453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>a});var r=i(6540);const t={},n=r.createContext(t);function o(e){const s=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(n.Provider,{value:s},e.children)}},8542:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Core API/database","title":"Database Module","description":"The database package contains modules for querying the database. It provides a suite of modules for handling database interactions within the core API. It includes specialized query classes for retrieving various types of data, such as forecasts, historical records, user preferences, and weather data.","source":"@site/docs/Core API/database.md","sourceDirName":"Core API","slug":"/Core API/database","permalink":"/building-intelligence/docs/Core API/database","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"API Module","permalink":"/building-intelligence/docs/Core API/api"},"next":{"title":"Device Module","permalink":"/building-intelligence/docs/Core API/device"}}');var t=i(4848),n=i(8453);const o={sidebar_position:2},a="Database Module",c={},d=[{value:"Forecast Queries",id:"forecast-queries",level:2},{value:"Methods",id:"methods",level:3},{value:"Historic Queries",id:"historic-queries",level:2},{value:"Methods",id:"methods-1",level:3},{value:"Preferences Queries",id:"preferences-queries",level:2},{value:"Methods",id:"methods-2",level:3},{value:"Weather Queries",id:"weather-queries",level:2},{value:"Methods",id:"methods-3",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"database-module",children:"Database Module"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"database"})," package contains modules for querying the database. It provides a suite of modules for handling database interactions within the core API. It includes specialized query classes for retrieving various types of data, such as forecasts, historical records, user preferences, and weather data."]}),"\n",(0,t.jsx)(s.h2,{id:"forecast-queries",children:"Forecast Queries"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"ForecastQueries"})," class handles RPC queries to the data engine for retrieving forecast data, particularly for non-controllable loads."]}),"\n",(0,t.jsx)(s.h3,{id:"methods",children:"Methods"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_ec_non_controllable_loads_forecast(start, stop, interval)"}),": Uses RPC to request non-controllable loads data from the data engine."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"historic-queries",children:"Historic Queries"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"HistoricQueries"})," class is responsible for querying and retrieving historical data from InfluxDB for various device types and system metrics."]}),"\n",(0,t.jsx)(s.h3,{id:"methods-1",children:"Methods"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_tz_temperature_historic(start, stop, entity_id)"}),": Retrieves the historic temperature for a given thermal zone."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_tz_setpoint_historic(start, stop, entity_id)"}),": Retrieves the historic setpoint for a given thermal zone."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_tz_electric_consumption(start, stop, entity_id)"}),": Retrieves the electric consumption of a specific thermal zone."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_vehicle_consumption_historic(start, stop)"}),": Retrieves consumption historic for the electric vehicle."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_ec_non_controllable_loads_historic(start, stop)"}),": Builds and retrieves the non-controllable consumption."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"preferences-queries",children:"Preferences Queries"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"PreferencesQueries"})," class manages the retrieval of user preferences from both InfluxDB and Redis, covering settings like comfort, occupancy, and device-specific preferences."]}),"\n",(0,t.jsx)(s.h3,{id:"methods-2",children:"Methods"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_preferences(device_id, start, stop, preference_type, sampling_in_minutes)"}),": Loads preferences for a specific device."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_comfort_setpoints(device_id, start, stop, sampling_in_minutes)"}),": Loads comfort setpoints preferences."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_electric_battery_soc_preferences(device_id, start, stop, sampling_in_minutes)"}),": Loads electric battery state of charge preferences."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_occupancy_preferences(device_id, start, stop, sampling_in_minutes)"}),": Loads occupancy preferences."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_vehicle_branched_preferences(device_id, start, stop, sampling_in_minutes)"}),": Loads vehicle branched preferences."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_vehicle_soc_preferences(device_id, start, stop, sampling_in_minutes)"}),": Loads vehicle state of charge preferences."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"load_water_heater_consumption_preferences(device_id, start, stop, sampling_in_minutes)"}),": Loads water heater consumption preferences."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"weather-queries",children:"Weather Queries"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"WeatherQueries"})," class is designed to retrieve both historical and forecast weather data from InfluxDB, which is essential for accurate energy predictions and system optimization."]}),"\n",(0,t.jsx)(s.h3,{id:"methods-3",children:"Methods"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"retrieve_weather_forecast(start, stop, variable, interval)"}),": Retrieves the forecast of a weather variable between start and stop times."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"retrieve_weather_historic(start, stop, variable, measurement, interval)"}),": Retrieves the weather historic data."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);