"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Building Intelligence","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Core API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Core API Introduction","href":"/docs/Core API/intro","docId":"Core API/intro","unlisted":false},{"type":"link","label":"API Module","href":"/docs/Core API/api","docId":"Core API/api","unlisted":false},{"type":"link","label":"Database Module","href":"/docs/Core API/database","docId":"Core API/database","unlisted":false},{"type":"link","label":"Device Module","href":"/docs/Core API/device","docId":"Core API/device","unlisted":false},{"type":"link","label":"Schedule Module","href":"/docs/Core API/schedule","docId":"Core API/schedule","unlisted":false}]},{"type":"category","label":"Data Engine","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database","href":"/docs/Data Engine/database","docId":"Data Engine/database","unlisted":false},{"type":"link","label":"Device","href":"/docs/Data Engine/device","docId":"Data Engine/device","unlisted":false},{"type":"link","label":"Events","href":"/docs/Data Engine/events","docId":"Data Engine/events","unlisted":false},{"type":"link","label":"Forecaster","href":"/docs/Data Engine/forecaster","docId":"Data Engine/forecaster","unlisted":false},{"type":"link","label":"GRAP","href":"/docs/Data Engine/grap","docId":"Data Engine/grap","unlisted":false},{"type":"link","label":"Introduction","href":"/docs/Data Engine/intro","docId":"Data Engine/intro","unlisted":false}]},{"type":"category","label":"Grid Services API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Grid Services API","href":"/docs/Grid Services API/intro","docId":"Grid Services API/intro","unlisted":false},{"type":"link","label":"API","href":"/docs/Grid Services API/api","docId":"Grid Services API/api","unlisted":false}]},{"type":"category","label":"Home Assistant Interface","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HA Device Interface","href":"/docs/Home Assistant Interface/intro","docId":"Home Assistant Interface/intro","unlisted":false},{"type":"link","label":"Control","href":"/docs/Home Assistant Interface/control","docId":"Home Assistant Interface/control","unlisted":false}]},{"type":"category","label":"common","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to the Common Package","href":"/docs/common/common-intro","docId":"common/common-intro","unlisted":false},{"type":"link","label":"Database","href":"/docs/common/database","docId":"common/database","unlisted":false},{"type":"link","label":"Device","href":"/docs/common/device","docId":"common/device","unlisted":false},{"type":"link","label":"Util","href":"/docs/common/util","docId":"common/util","unlisted":false}]},{"type":"category","label":"frontend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Frontend","href":"/docs/frontend/intro","docId":"frontend/intro","unlisted":false},{"type":"link","label":"Database","href":"/docs/frontend/database","docId":"frontend/database","unlisted":false},{"type":"link","label":"Static Assets","href":"/docs/frontend/static","docId":"frontend/static","unlisted":false},{"type":"link","label":"HTML Templates","href":"/docs/frontend/templates","docId":"frontend/templates","unlisted":false}]},{"type":"category","label":"initializers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Initializers Package","href":"/docs/initializers/intro","docId":"initializers/intro","unlisted":false},{"type":"link","label":"Database Initializers","href":"/docs/initializers/database","docId":"initializers/database","unlisted":false},{"type":"link","label":"Device Initializers","href":"/docs/initializers/device","docId":"initializers/device","unlisted":false},{"type":"link","label":"Grid Functions Config","href":"/docs/initializers/grid_functions_config","docId":"initializers/grid_functions_config","unlisted":false},{"type":"link","label":"Labels DBs Config","href":"/docs/initializers/labels_dbs_config","docId":"initializers/labels_dbs_config","unlisted":false},{"type":"link","label":"User Initializers","href":"/docs/initializers/user","docId":"initializers/user","unlisted":false}]}]},"docs":{"common/common-intro":{"id":"common/common-intro","title":"Introduction to the Common Package","description":"The common package is a foundational component of the building intelligence system, designed to encapsulate shared modules and utilities that are used across multiple services. Its primary purpose is to promote code reuse, reduce redundancy, and provide centralized, standardized implementations for essential functionalities such as database interactions, device management, and logging.","sidebar":"tutorialSidebar"},"common/database":{"id":"common/database","title":"Database","description":"The database package provides common modules for interacting with various databases.","sidebar":"tutorialSidebar"},"common/device":{"id":"common/device","title":"Device","description":"The device package provides common modules for device-related definitions and utilities.","sidebar":"tutorialSidebar"},"common/util":{"id":"common/util","title":"Util","description":"The util package provides common utility modules for the application.","sidebar":"tutorialSidebar"},"Core API/api":{"id":"Core API/api","title":"API Module","description":"The api package provides the core API endpoints for the system.","sidebar":"tutorialSidebar"},"Core API/database":{"id":"Core API/database","title":"Database Module","description":"The database package contains modules for querying the database. It provides a suite of modules for handling database interactions within the core API. It includes specialized query classes for retrieving various types of data, such as forecasts, historical records, user preferences, and weather data.","sidebar":"tutorialSidebar"},"Core API/device":{"id":"Core API/device","title":"Device Module","description":"The device package provides a comprehensive suite of modules for managing and interacting with various devices within the system. It includes functionalities for device classification, historical data retrieval, and real-time device control.","sidebar":"tutorialSidebar"},"Core API/intro":{"id":"Core API/intro","title":"Core API Introduction","description":"The core_api package is the central hub for the building intelligence system\'s API. It is composed of several key sub-packages that work together to provide a comprehensive set of functionalities for managing building data, devices, and schedules.","sidebar":"tutorialSidebar"},"Core API/schedule":{"id":"Core API/schedule","title":"Schedule Module","description":"The schedule package provides a robust framework for managing and monitoring device schedules within the building intelligence system. It includes modules for handling both device-specific and weekly recurring schedules, as well as data models and monitoring tools to ensure reliable and efficient scheduling operations.","sidebar":"tutorialSidebar"},"Data Engine/database":{"id":"Data Engine/database","title":"Database","description":"The data_engine.database package provides a suite of modules for robust interaction with various database systems, primarily focusing on InfluxDB for time-series data and Redis for caching and configuration management. These modules are essential for the data engine\'s core operations, ensuring efficient data retrieval, storage, and synchronization.","sidebar":"tutorialSidebar"},"Data Engine/device":{"id":"Data Engine/device","title":"Device","description":"The data_engine.device package provides modules for device-related functionalities, focusing on the classification and management of various device types within the system. This package is crucial for ensuring that devices are handled consistently and correctly across the application.","sidebar":"tutorialSidebar"},"Data Engine/events":{"id":"Data Engine/events","title":"Events","description":"The data_engine.events package is responsible for handling event-driven communication within the data engine. It provides modules that manage asynchronous interactions, such as handling RPC (Remote Procedure Call) requests and responses, which are crucial for the distributed nature of the system.","sidebar":"tutorialSidebar"},"Data Engine/forecaster":{"id":"Data Engine/forecaster","title":"Forecaster","description":"The data_engine.forecaster package is dedicated to generating and managing time-series forecasts within the data engine. It provides the necessary tools to predict future data points based on historical trends, which is essential for proactive decision-making and optimization.","sidebar":"tutorialSidebar"},"Data Engine/grap":{"id":"Data Engine/grap","title":"GRAP","description":"The data_engine.grap package is responsible for implementing the GRAP (Grid Response and Protection) functionality within the data engine. This package provides modules for detecting grid events, such as blackouts, and managing the system\'s response to ensure stability and reliability.","sidebar":"tutorialSidebar"},"Data Engine/intro":{"id":"Data Engine/intro","title":"Data Engine","description":"The data_engine package serves as the central component for data processing, forecasting, and event handling within the system. It is composed of several specialized sub-packages that work together to manage data, devices, and grid events.","sidebar":"tutorialSidebar"},"frontend/database":{"id":"frontend/database","title":"Database","description":"This section covers the database utilities used in the frontend application.","sidebar":"tutorialSidebar"},"frontend/intro":{"id":"frontend/intro","title":"Frontend","description":"This package implements the frontend web application for the building intelligence system. It provides a user interface for monitoring and controlling various smart home devices.","sidebar":"tutorialSidebar"},"frontend/static":{"id":"frontend/static","title":"Static Assets","description":"The static directory contains all the static assets for the web interface.","sidebar":"tutorialSidebar"},"frontend/templates":{"id":"frontend/templates","title":"HTML Templates","description":"The templates directory contains Jinja2 HTML templates that are rendered by the FastAPI application to generate the web pages.","sidebar":"tutorialSidebar"},"Grid Services API/api":{"id":"Grid Services API/api","title":"API","description":"This module aggregates the various API components for the Grid Services API.","sidebar":"tutorialSidebar"},"Grid Services API/intro":{"id":"Grid Services API/intro","title":"Grid Services API","description":"The Grid Services API is a peripheral service responsible for exposing endpoints that interact with various grid-related functionalities.","sidebar":"tutorialSidebar"},"Home Assistant Interface/control":{"id":"Home Assistant Interface/control","title":"Control","description":"The control subpackage is the core of the ha-device-interface service, providing the necessary tools to manage and interact with smart home devices. It is composed of two main modules: interface.py and subscriber.py.","sidebar":"tutorialSidebar"},"Home Assistant Interface/intro":{"id":"Home Assistant Interface/intro","title":"HA Device Interface","description":"The ha-device-interface package serves as the primary service for interacting with smart home devices, particularly those integrated with Home Assistant. It provides a streamlined interface for controlling various devices by abstracting the underlying communication protocols.","sidebar":"tutorialSidebar"},"initializers/database":{"id":"initializers/database","title":"Database Initializers","description":"The database package contains modules for initializing and managing database connections and data.","sidebar":"tutorialSidebar"},"initializers/device":{"id":"initializers/device","title":"Device Initializers","description":"The device package contains modules related to device definitions and utility functions.","sidebar":"tutorialSidebar"},"initializers/grid_functions_config":{"id":"initializers/grid_functions_config","title":"Grid Functions Config","description":"The gridfunctionsconfig package contains configuration files related to grid services.","sidebar":"tutorialSidebar"},"initializers/intro":{"id":"initializers/intro","title":"Initializers Package","description":"The initializers package serves as the primary entry point for setting up the foundational components and data structures required for the building intelligence system. It orchestrates the initialization of databases, device configurations, user profiles, and other critical settings by aggregating several specialized sub-packages.","sidebar":"tutorialSidebar"},"initializers/labels_dbs_config":{"id":"initializers/labels_dbs_config","title":"Labels DBs Config","description":"The labelsdbsconfig package contains YAML configuration files that define various labels and mappings for databases and APIs. This ensures consistent naming and referencing across the entire system.","sidebar":"tutorialSidebar"},"initializers/user":{"id":"initializers/user","title":"User Initializers","description":"The user package contains modules for generating user-specific data profiles and initializing Redis data.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Building Intelligence","description":"License","sidebar":"tutorialSidebar"}}}}')}}]);